networks:
    app-network:
        driver: bridge

services:

    zookeeper:
        container_name: zookeeper
        image: confluentinc/cp-zookeeper:latest
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
        networks:
            - "app-network"

    kafka:
        image: confluentinc/cp-kafka:latest
        container_name: kafka
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        ports:
          - "9092:9092"
        depends_on:
            - zookeeper
        networks:
            - "app-network"

    # mongo:
    #     image: mongo
    #     container_name: mongo
    #     ports:
    #       - "27017:27017"
    #     networks:
    #         - "app-network"

    mysql:

        image: mysql:9
        restart: always
        container_name: mysql

        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            # Password for root access
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}

        ports:
        # <Port exposed> : <MySQL Port running inside container>
            - '3306:3306'
        expose:
        # Opens port 3306 on the container
            - '3306'
      # Where our data will be persisted

        volumes:
          - mysql_data:/var/lib/mysql
        networks:
            - app-network


    user-service:
        build: ./src/services/user-service
        container_name: "user-service"

        env_file:
            - ./src/services/user-service/.env

        volumes:
          - ./src/services/user-service/src:/app/src

        ports:
            - "${LOCAL_HOST_PORT}:${USER_SERVICE_PORT}"

        depends_on:
            - mysql 
            - kafka

        networks:
            - "app-network"

volumes:
  mysql_data:
  node_modules:
    
